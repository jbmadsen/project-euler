#
# Author:           Jacob B. Madsen
# Email:            jacob@jbmadsen.com
# Date:             2009-07-31
# Computation time: 8.71799993515 seconds.
#

# Description:
# Pentagonal numbers are generated by the formula, P_(n)=n(3n-1)/2.
# The first ten pentagonal numbers are:
#
#           1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P_(4) + P_(7) = 22 + 70 = 92 = P_(8).
# However, their difference, 70 - 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, P_(j) and P_(k),
# for which their sum and difference is pentagonal and D = |P_(k) - P_(j)| is minimised;
# what is the value of D?

import math

# Imports time and start counting
import time
start = time.time()
print ("Starting...")

def pentagonal(n):
    # Computes and returns the n'th pentagonal number
    return (n * (3 * n - 1) / 2)

def ispentagonal(number):
    # Checks if the number is a pentagonal number
    # Thanks: http://en.wikipedia.org/wiki/Pentagonal_number
    if ((math.sqrt(24 * number + 1) + 1) / 6) % 1 == 0:
        return True
    return False

list_of_pentagonals = []
for x in range(1,3000):
    list_of_pentagonals.append(pentagonal(x))

for x in range(1, len(list_of_pentagonals)):
    for y in range(x, len(list_of_pentagonals)):
        if ispentagonal(abs(list_of_pentagonals[x] - list_of_pentagonals[y])):
            if ispentagonal(list_of_pentagonals[x] + list_of_pentagonals[y]):
                print ("x:", list_of_pentagonals[x])
                print ("y:", list_of_pentagonals[y])
                print ("abs(x - y):", abs(list_of_pentagonals[x] - list_of_pentagonals[y]))
                print ("(x + y):", (list_of_pentagonals[x] + list_of_pentagonals[y]))

# Prints the time to complete
print ("Done in " + str(time.time()-start) + " seconds.")
