#
# Author:           Jacob B. Madsen
# Email:            jacob@jbmadsen.com
# Date:             2009-07-28
# Computation time: 0.0620000362396 seconds.
#

# Description:
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#
#   Triangle        T(n) = n ( n + 1 ) / 2       1, 3, 6, 10, 15, ...
#   Pentagonal      P(n) = n ( 3 n - 1 ) / 2     1, 5, 12, 22, 35, ...
#   Hexagonal       H(n) = n ( 2 n - 1 )         1, 6, 15, 28, 45, ...
#
# It can be verified that T(285) = P(165) = H(143) = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.

# Imports
import math

# Imports time and start counting
import time
start = time.time()
print ("Starting...")

limit = 40755

def nexttriangle(number):
    num = number * (number + 1 ) / 2
    return num

def istriangle(number):
    # Checks if the number is a triangle number
    # Thanks: http://duncan99.wordpress.com/2008/11/04/project-euler-problem-45/
    if ((math.sqrt(8 * x + 1) - 1) / 2) % 1 == 0:
        return True
    return False


def ispentagonal(number):
    # Checks if the number is a pentagonal number
    # Thanks: http://en.wikipedia.org/wiki/Pentagonal_number
    if ((math.sqrt(24 * number + 1) + 1) / 6) % 1 == 0:
        return True
    return False

def ishexagonal(number):
    # Checks if the number is a hexagonal number
    # Thanks: http://en.wikipedia.org/wiki/Hexagonal_number
    if ((math.sqrt(8 * number + 1) + 1) / 4) % 1 == 0:
        return True
    return False

x = 1
while True:
    num = nexttriangle(limit + x)
    if ispentagonal(num) and ishexagonal(num):
        print (num)
        break
    x += 1

# Prints the time to complete
print ("Done in " + str(time.time()-start) + " seconds.")
