#
# Author:           Jacob B. Madsen
# Email:            jacob@jbmadsen.com
# Date:             2009-07-23
# Computation time: 10.5780000687 seconds.
#

# Description:
# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
#           1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first eight triangle numbers:
#
#     1: 1
#     3: 1,3
#     6: 1,2,3,6
#    10: 1,2,5,10
#    15: 1,3,5,15
#    21: 1,3,7,21
#    28: 1,2,4,7,14,28
#    36: 1,2,3,4,6,9,12,18
#
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

# Imports the math module
import math

# Imports time and start counting
import time
print ("Starting...")
start = time.time()

def divisors(n):
    divisor = []
    # Only the square of the number is needed, as the factor pairs below shows
    # the triangular number T(37) has 12 factors which yields
    # the (a,b) pairs 1,666; 2,333; 3,222; 6,111; 9,74 and 18,37.
    # Courtesy of : http://www.physicsforums.com/showthread.php?t=119070
    for x in range(1, math.ceil(n ** 0.5) + 1):
        if n % x == 0:
            divisor.append(x)
            divisor.append(n/x)
    return len(divisor)

class Triangle(object):
    def __init__(self):
        self.count = 1
        self.sum = 0

    def get_sum(self):
        return self.sum

    def next(self):
        self.sum += self.count
        self.count += 1
        return self.sum

def problem(number = 500):
    #take_time = 10
    triangle = Triangle()
    while True:
        #if time.time()-start > take_time:
        #    print triangle.get_sum()
        #    take_time += 10
        tmp_sum = triangle.next()
        divisor = divisors(tmp_sum)
        if divisor > number:
            return tmp_sum, divisor

print (problem()[0])

# Prints the time to complete
print ("Done in " + str(time.time()-start) + " seconds.")
